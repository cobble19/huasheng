<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd">
	
	<security:http pattern="/index*" security="none" />
	<security:http pattern="/topic*" security="none" />
	<security:http pattern="/category*" security="none" />
	<security:http pattern="/item*" security="none" />
	<security:http pattern="/videoSrc*" security="none" />
	<security:http pattern="/video*" security="none" />
	<security:http pattern="/videoplay*" security="none" />
	
	
	
	<security:http pattern="/bootstrap/**" security="none" />
	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/data/**" security="none" />
	<security:http pattern="/extjs4/**" security="none" />
	<security:http pattern="/html/**" security="none" />
	<security:http pattern="/images/**" security="none" />
	<security:http pattern="/jquery-ui-1.10.3/**" security="none" />
	<security:http pattern="/js/**" security="none" />
	<security:http pattern="/jsp/**" security="none" />
	<security:http pattern="/manage/huasheng/**" security="none" />
	<security:http pattern="/manage/*.js" security="none" />
	<security:http pattern="/manage/**/*.js" security="none" />
	<security:http pattern="/versionII/**" security="none" />
	<security:http pattern="/login.jsp*" security="none" />
	<security:http pattern="/**error.jsp*" security="none" />
	<security:http pattern="/manage/login.jsp*" security="none" />
	<security:http pattern="/upload/*" security="none" />
	<security:http>
		<security:intercept-url pattern="/login.jsp*"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- <security:intercept-url pattern="/manage/**" access="ROLE_USER" /> -->
		<security:form-login login-page='/manage/login.jsp'
			default-target-url='/manage/index.action' always-use-default-target='true'
			authentication-failure-url="/manage/login.jsp?error=authFail" />
		<!-- <form-login /> -->
		<security:logout logout-url="/j_spring_security_logout"
			delete-cookies="JSESSIONID" />
		<!-- <session-management invalid-session-url="/manage/login.jsp"> </session-management> -->
		<!--添加自定义的过滤器 放在FILTER_SECURITY_INTERCEPTOR之前有效 -->
		<security:custom-filter ref="filterSecurityInterceptor"
			before="FILTER_SECURITY_INTERCEPTOR" />
	</security:http>
	<!-- <authentication-manager> <authentication-provider> <user-service> <user 
		name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" /> <user 
		name="ge" password="ge" authorities="ROLE_USER" /> </user-service> </authentication-provider> 
		</authentication-manager> -->
	<!-- <security:authentication-manager alias="authenticationManager"> <security:authentication-provider 
		user-service-ref="userDetailsManager"> <security:password-encoder ref="passwordEncoder"> 
		<security:salt-source user-property="username"/> </security:password-encoder> 
		</security:authentication-provider> </security:authentication-manager> -->
	<!-- 事件监听:实现了 ApplicationListener监听接口，包括AuthenticationCredentialsNotFoundEvent 
		事件， AuthorizationFailureEvent事件，AuthorizedEvent事件， PublicInvocationEvent事件 -->
	<bean
		class="org.springframework.security.authentication.event.LoggerListener" />

	<!-- 用户的密码加密或解密 -->
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<!-- 用户详细信息管理 : 数据源、用户缓存、启用用户组功能。 -->
	<bean id="userDetailsManager"
		class="org.springframework.security.provisioning.JdbcUserDetailsManager">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="userCache" ref="userCache" /> -->
	</bean>
	<!-- <bean id="userCache" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache"> 
		<property name="cache" ref="userEhCache" /> </bean> -->
	<!-- <bean id="userEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"> 
		<property name="cacheName" value="userCache" /> <property name="cacheManager" 
		ref="cacheManager" /> </bean> -->
	<!-- 缓存用户管理 -->
	<!-- <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" 
		/> -->

	<!-- 重写认证类 -->
	<!-- 配置认证管理器 -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="loginUserDetailsService">
			<security:password-encoder ref="passwordEncoder">
				<security:salt-source user-property="username" />
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="loginUserDetailsService"
		class="com.cobble.huasheng.springsecurity.LoginUserDetailsService">
		<property name="userDAO" ref="userDAO" />
	</bean>
	<bean id="accessDecisionManager" class="com.cobble.huasheng.springsecurity.LoginAccessDecisionManagerImpl">
	</bean>
	<bean id="securityMetadataSource" class="com.cobble.huasheng.springsecurity.LoginFilterInvocationSecurityMetadataSource">
		<constructor-arg name="roleService" ref="roleService"></constructor-arg>
		<constructor-arg name="privilegeService" ref="privilegeService"></constructor-arg>
	</bean>
	<bean id="filterSecurityInterceptor" class="com.cobble.huasheng.springsecurity.LoginFilterSecurityInterceptorImpl">
		<property name="authenticationManager" ref="authenticationManager"></property>
		<property name="accessDecisionManager" ref="accessDecisionManager"></property>
		<property name="securityMetadataSource" ref="securityMetadataSource"></property>
	</bean>
	
	
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>securityMessages</value>
			</list>
		</property>
	</bean>
</beans>